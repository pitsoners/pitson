/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor;

import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.util.HashSet;
import javax.swing.ComboBoxEditor;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import model.ConnectionModel;
import util.Database;

/**
 * Editeur pour le combobox de base de doonnées qui propose deux TextField pour éditer l'url et le nom de la base
 * @author Thierry
 */
public class ComboBoxDatabaseEditor extends javax.swing.JPanel implements ComboBoxEditor
{
    /**
     * la donnée en cours d'édition
     */
    private Database m_editedDatabase;

    /**
     * Creates new form ComboBoxDatabaseEditor
     * @param editedDatabase l'élément base de donnée édité
     */
    public ComboBoxDatabaseEditor(Database editedDatabase)
    {
	m_editedDatabase = editedDatabase;
	initComponents();
	new TextFieldFocusLostListener();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabelServerURL = new javax.swing.JLabel();
        jTextFieldServerURL = new javax.swing.JTextField();
        javax.swing.Box.Filler filler = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jLabelDatabaseName = new javax.swing.JLabel();
        jTextFieldDatabaseName = new javax.swing.JTextField();

        jLabelServerURL.setText("URL");

        jTextFieldServerURL.setColumns(20);

        jLabelDatabaseName.setText("Nom");

        jTextFieldDatabaseName.setColumns(12);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelServerURL)
                    .addComponent(jLabelDatabaseName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldServerURL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jTextFieldDatabaseName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(filler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldServerURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filler, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelServerURL)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDatabaseName)
                    .addComponent(jTextFieldDatabaseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelDatabaseName;
    private javax.swing.JLabel jLabelServerURL;
    private javax.swing.JTextField jTextFieldDatabaseName;
    private javax.swing.JTextField jTextFieldServerURL;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getEditorComponent()
    {
	return this;
    }

    @Override
    public void setItem(Object anObject)
    {
	if (anObject instanceof Database)
	{
	    Database db = (Database)anObject;
	    jTextFieldDatabaseName.setText(db.getName());
	    jTextFieldServerURL.setText(db.getUrl());
	}
    }

    @Override
    public Object getItem()
    {
	return m_editedDatabase;
    }

    @Override
    public void selectAll()
    {
	jTextFieldDatabaseName.selectAll();
	jTextFieldServerURL.selectAll();
    }

    @Override
    public void addActionListener(ActionListener l)
    {
	if (l != null)
	{
	    jTextFieldDatabaseName.addActionListener(l);
	    jTextFieldServerURL.addActionListener(l);
	}
    }

    @Override
    public void removeActionListener(ActionListener l)
    {
	if (l != null)
	{
	    jTextFieldDatabaseName.removeActionListener(l);
	    jTextFieldServerURL.removeActionListener(l);
	}
    }
    
    /**
     * classe d'écouteur qui met à jour la donnée en cours d'édtion lorsque le focus est perdu sur un des textfields de l'éditeur
     */
    private class TextFieldFocusLostListener extends FocusAdapter
    {
	public TextFieldFocusLostListener()
	{
	    jTextFieldDatabaseName.addFocusListener(this);
	    jTextFieldServerURL.addFocusListener(this);
	}

	@Override
	public void focusLost(FocusEvent e)
	{
	    if (m_editedDatabase != null)
	    {
		if (e.getSource() == jTextFieldDatabaseName)
		{
		    m_editedDatabase.setName(jTextFieldDatabaseName.getText());
		    
		}
		else
		{
		    m_editedDatabase.setUrl(jTextFieldServerURL.getText());
		}
	    }
	}
	
    }
}
