/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import javax.swing.JOptionPane;
import model.ConnectionModel;
import util.ConnectionHistory;
import util.Database;
import util.SQLConnection;

/**
 *
 * @author boulhol
 */
public class FrameLogin extends javax.swing.JFrame
{

    private ConnectionModel m_connectionModel;

    /**
     * Creates new form Login
     */
    public FrameLogin()
    {
	m_connectionModel = new ConnectionModel();
	initComponents();
	
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabelLogin = new javax.swing.JLabel();
        jComboBoxLogin = new javax.swing.JComboBox<>();
        jLabelPassword = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jLabelDatabase = new javax.swing.JLabel();
        jComboBoxDatabase = new javax.swing.JComboBox<>();
        jButtonConnection = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Connexion");
        setBounds(new java.awt.Rectangle(0, 0, 450, 350));
        addWindowListener(formListener);

        jLabelLogin.setText("Nom d'utilisateur");

        jComboBoxLogin.setEditable(true);
        jComboBoxLogin.setModel(m_connectionModel.getUserModel());

        jLabelPassword.setLabelFor(jComboBoxLogin);
        jLabelPassword.setText("Mot de passe");

        jLabelDatabase.setText("Base de données");

        jComboBoxDatabase.setEditable(true);
        jComboBoxDatabase.setModel(m_connectionModel.getDatabaseModel());
        jComboBoxDatabase.setEditor(new editor.ComboBoxDatabaseEditor());

        jButtonConnection.setText("Connexion");
        jButtonConnection.addActionListener(formListener);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/cross-piston.svg.med.png"))); // NOI18N
        jLabel1.setAlignmentX(0.5F);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelLogin)
                        .addGap(6, 6, 6)
                        .addComponent(jComboBoxLogin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPassword)
                        .addGap(26, 26, 26)
                        .addComponent(jPasswordField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDatabase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxDatabase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonConnection))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLogin)
                    .addComponent(jComboBoxLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDatabase)
                    .addComponent(jComboBoxDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonConnection)
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.WindowListener
    {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt)
        {
            if (evt.getSource() == jButtonConnection)
            {
                FrameLogin.this.jButtonConnectionActionPerformed(evt);
            }
        }

        public void windowActivated(java.awt.event.WindowEvent evt)
        {
        }

        public void windowClosed(java.awt.event.WindowEvent evt)
        {
        }

        public void windowClosing(java.awt.event.WindowEvent evt)
        {
            if (evt.getSource() == FrameLogin.this)
            {
                FrameLogin.this.formWindowClosing(evt);
            }
        }

        public void windowDeactivated(java.awt.event.WindowEvent evt)
        {
        }

        public void windowDeiconified(java.awt.event.WindowEvent evt)
        {
        }

        public void windowIconified(java.awt.event.WindowEvent evt)
        {
        }

        public void windowOpened(java.awt.event.WindowEvent evt)
        {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonConnectionActionPerformed
    {//GEN-HEADEREND:event_jButtonConnectionActionPerformed
	Database db = (Database) m_connectionModel.getDatabaseModel().getSelectedItem();
	String user = (String) m_connectionModel.getUserModel().getSelectedItem();
	if (db != null && user != null)
	{
	    SQLConnection.setup(db.getUrl(), db.getName(), user, new String(jPasswordField.getPassword()));

	    Connection conn = SQLConnection.getConnection();
	    if (conn != null)
	    {
		if (util.DatabaseTools.checkDatabase())
		{
		    String role = util.DatabaseTools.getRole();
		    if (role != null)
		    JOptionPane.showMessageDialog(this, String.format("Connexion réussie, bienvenue %s %s", role, user), "Connexion réussie", JOptionPane.INFORMATION_MESSAGE);
		    //TODO => ouvrir fenetre associée au role
		    // si la connexion est réussie, on l'ajoute à l'historique des connexions.
		    ConnectionHistory.getInstance().add(db, user);
		}
		else
		{
		    JOptionPane.showMessageDialog(this, "La base de données est invalide ou corrompue", "Erreur de connexion", JOptionPane.ERROR_MESSAGE);
		}
	    }
	    else
	    {
		JOptionPane.showMessageDialog(this, "Erreur de connexion. vérifiez les paramètres", "Erreur de connexion", JOptionPane.ERROR_MESSAGE);
	    }
	}
	else
	{
	    JOptionPane.showMessageDialog(this, "Des champs requis sont manquants", "Erreur de connexion", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_jButtonConnectionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        ConnectionHistory.getInstance().save();
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnection;
    private javax.swing.JComboBox<util.Database> jComboBoxDatabase;
    private javax.swing.JComboBox<String> jComboBoxLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDatabase;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JPasswordField jPasswordField;
    // End of variables declaration//GEN-END:variables
}
