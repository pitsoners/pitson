/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.ManagerLot;
import entity.Lot;
import javax.swing.JOptionPane;
import model.LotAControlerModel;
import util.SQLConnection;

/**
 *
 * @author preda
 */
public class FrameControleurQualite extends javax.swing.JFrame
{

    /**
     * Creates new form ControleurQualite
     */
    public FrameControleurQualite()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        labelLot = new javax.swing.JLabel();
        ScrollPaneLot = new javax.swing.JScrollPane();
        listeLots = new javax.swing.JList();
        butDemReprendre = new javax.swing.JButton();
        butTerminer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controleur Qualité");
        setResizable(false);

        labelLot.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelLot.setText("Lot");

        listeLots.setModel(new model.LotAControlerModel());
        listeLots.setCellRenderer(new render.RendererLotAControler());
        ScrollPaneLot.setViewportView(listeLots);

        butDemReprendre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butDemReprendre.setText("Demarer/Reprendre");
        butDemReprendre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butDemReprendreActionPerformed(evt);
            }
        });

        butTerminer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butTerminer.setText("Terminer");
        butTerminer.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butTerminerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelLot, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 490, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ScrollPaneLot)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butDemReprendre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(butTerminer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(labelLot, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ScrollPaneLot, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(butDemReprendre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(butTerminer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butDemReprendreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butDemReprendreActionPerformed
    {//GEN-HEADEREND:event_butDemReprendreActionPerformed
        Lot l = (Lot)listeLots.getSelectedValue();
        if(l != null)
        {
            if (!l.getEtatControle().equals("EnCours") && ManagerLot.demarrerControleLot(l))
            {
                JOptionPane.showMessageDialog(this, "Controle demarré pour le lot " + l.getIdLot());
                ((LotAControlerModel)listeLots.getModel()).refreshIndex(listeLots.getSelectedIndex());
            }
            FrameControleurSaisiePiece frame = new FrameControleurSaisiePiece(this, true, l.getIdLot());
            
            frame.setVisible(true);
        }
    }//GEN-LAST:event_butDemReprendreActionPerformed

    private void butTerminerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butTerminerActionPerformed
    {//GEN-HEADEREND:event_butTerminerActionPerformed
        Lot l = (Lot)listeLots.getSelectedValue();
        
        if(l != null && l.getEtatControle().equals("EnCours"))
        {
            boolean terminer = l.getNbrPieceDemande() <= l.getPiecesControlees();
            if (!terminer)
            {
                terminer = JOptionPane.showConfirmDialog(this, "Toutes les pièces non pas été mesurées ! Terminer le controle ?","Confirmation Terminer", 
                            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION;
            }
            if (terminer)
            {
                if (ManagerLot.terminerControleLot(l))
                {
                    JOptionPane.showMessageDialog(this, "Controle terminé pour le lot " + l.getIdLot());
                    ((LotAControlerModel)listeLots.getModel()).removeLot(l);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "?");
                }
            }
        }
    }//GEN-LAST:event_butTerminerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FrameControleurQualite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FrameControleurQualite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FrameControleurQualite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FrameControleurQualite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        SQLConnection.setup("jdbc:sqlserver://serveur-sql2017", "Pitson", "denis", "denis");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new FrameControleurQualite().setVisible(true);
            }
        });
    }

    public void refreshLots()
    {
        
        Lot l = (Lot)listeLots.getSelectedValue();
        l.setPiecesControlees(l.getPiecesControlees() + 1);
        ((LotAControlerModel)listeLots.getModel()).refreshIndex(listeLots.getSelectedIndex());
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneLot;
    private javax.swing.JButton butDemReprendre;
    private javax.swing.JButton butTerminer;
    private javax.swing.JLabel labelLot;
    private javax.swing.JList listeLots;
    // End of variables declaration//GEN-END:variables
}
